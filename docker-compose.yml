version: "3.8"

services:
  web:
    container_name: web
    build: .
    command: rails s -p 3000 -b '0.0.0.0'
    volumes:
      - .:/opt/www
    ports:
      - "3001:3000"
    env_file:
      - ".env"
    depends_on:
      - db
      - redis
      - es
      - webpacker
    networks:
      - app-network

  webpacker: 
    container_name: webpacker
    build: .
    env_file: 
      - ".env"
    environment:
      WEBPACKER_DEV_SERVER_HOST: webpacker
    command: ./bin/webpack-dev-server --inline=true --host=webpacker
    volumes: 
      - .:/opt/www
      - /opt/www/node_modules
    ports:
      - "3036:3035"
    networks:
      - app-network

  db:
    container_name: postgres
    image: kartoza/postgis
    ports:
      - "5433:5432"
    env_file:
      - ".env"
    environment:
      DATADIR: /opt/postgres/data
      DEFAULT_ENCODING: UTF8
      DEFAULT_COLLATION: id_ID.utf8
      DEFAULT_CTYPE: id_ID.utf8
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: postgres
      POSTGRES_DBNAME: protectedplanet-db
      POSTGRES_MULTIPLE_EXTENSIONS: postgis,hstore,postgis_topology
    volumes:
      - postgres-data:/var/lib/postgresql
      # - postgres-data:/opt/postgres/data
    networks:
      - app-network

  redis:
    container_name: redis
    image: redis
    ports:
      - "6380:6379"
    env_file:
      - ".env"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  sidekiq:
    container_name: sidekiq
    build: .
    volumes:
      - .:/opt/www
    command: bundle exec sidekiq
    env_file:
      - ".env"
    depends_on:
      - redis
      - db
    networks:
      - app-network

  es:
    container_name: es
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.0
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9201:9200"
    env_file:
      - ".env"
    volumes:
      - "elastic-data:/usr/share/elasticsearch/data"
    networks:
      - app-network

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.0.0
    ports:
      - "5602:5601"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  elastic-data:
