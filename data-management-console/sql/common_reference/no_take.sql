DELETE FROM stg_no_take

DROP SEQUENCE IF EXISTS no_take_seq
CREATE SEQUENCE no_take_seq AS INT START WITH 1

CREATE OR REPLACE FUNCTION stg_no_take_id() RETURNS TRIGGER LANGUAGE PLPGSQL AS $$ BEGIN IF NEW.id is NULL THEN NEW.id = nextval('no_take_seq'); END IF; RETURN NEW; END; $$
DROP TRIGGER IF EXISTS trig_stg_no_take ON stg_no_take
CREATE TRIGGER trig_stg_no_take BEFORE INSERT ON stg_no_take FOR EACH ROW EXECUTE procedure stg_no_take_id();

INSERT INTO stg_no_take(DESCRIPTION, ORIGINATOR_ID ) VALUES('Part', 10000 );
INSERT INTO stg_no_take(DESCRIPTION, ORIGINATOR_ID ) VALUES('Not Reported', 10000 );
INSERT INTO stg_no_take(DESCRIPTION, ORIGINATOR_ID ) VALUES('Not Applicable', 10000 );
INSERT INTO stg_no_take(DESCRIPTION, ORIGINATOR_ID ) VALUES('All', 10000 );
INSERT INTO stg_no_take(DESCRIPTION, ORIGINATOR_ID ) VALUES('All or Part', 10000 );
INSERT INTO stg_no_take(DESCRIPTION, ORIGINATOR_ID ) VALUES('None', 10000 );


