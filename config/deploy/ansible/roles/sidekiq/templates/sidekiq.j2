#!/bin/bash
# sidekiq    Init script for Sidekiq
# chkconfig: 345 100 75
#
# Description: Starts and Stops Sidekiq message processor
#
# User-specified exit parameters used in this script:
#
# Exit Code 101 - Incorrect User ID
# Exit Code 102 - Directory not found


# You will need to modify these
AS_USER={{username}}
APP_DIR="/var/www/pp/current"
APP_ENV="{{stage}}"

RETVAL=0


start() {

  [ `id -u` == '0' ] || (echo "sidekiq runs as root only .."; exit 101)
  [ -d $APP_DIR ] || (echo "$APP_DIR not found!.. Exiting"; exit 102)

  {% for process in sidekiq_processes %}
    PID_FILE="$APP_DIR/tmp/pids/{{ process.name }}.pid"

    if running $PID_FILE; then
      echo "{{process.name}} is already running"
    else
      LOG_FILE="$APP_DIR/log/{{ process.name }}.log"
      QUEUES="{{ process.queues|join(' -q ') }}"

      START_CMD="bundle exec sidekiq -e $APP_ENV -P $PID_FILE -q $QUEUES"
      CMD="cd ${APP_DIR}; ${START_CMD} >> ${LOG_FILE} 2>&1 &"

      echo "Starting sidekiq ({{ process.name }}) message processor .. "
      su -c "$CMD" - $AS_USER

      RETVAL=$?

      #Sleeping for 8 seconds for process to be precisely visible in process table
      sleep 8
    fi
  {% endfor %}

  status
}

stop() {
  {% for process in sidekiq_processes %}
    PID_FILE="$APP_DIR/tmp/pids/{{ process.name }}.pid"
    CMD="cd $APP_DIR; bundle exec sidekiqctl stop $PID_FILE"

    echo "Stopping sidekiq ({{ process.name }}) message processor .."
    su -c "$CMD" - $AS_USER
  {% endfor %}
}

status() {
  declare -i RESULT=0

  {% for process in sidekiq_processes %}
    PID_FILE="$APP_DIR/tmp/pids/{{ process.name }}.pid"
    if running $PID_FILE; then
      echo "{{ process.name }} is running"
    else
      RESULT+=1
      echo "{{ process.name }} is not running"
    fi
  {% endfor %}

  return $RESULT
}

running() {
  PID_FILE=$1
  [ -e $PID_FILE ] || return 1

  cat $PID_FILE 2>&1 | xargs ps -p > /dev/null
  return $?
}


case "$1" in
  start)
      start
      ;;
  stop)
      stop
      ;;
  status)
      status
      ;;
  *)
      echo "Usage: $0 {start|stop|status}"
      exit 0
      ;;
esac
