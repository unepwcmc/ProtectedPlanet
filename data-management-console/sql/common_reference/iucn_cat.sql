DELETE FROM staging_iucn_cat
CREATE OR REPLACE FUNCTION staging_iucn_cat_id() RETURNS TRIGGER LANGUAGE PLPGSQL AS $$ BEGIN IF NEW.id is NULL THEN NEW.id = hashtext(NEW.description); END IF; RETURN NEW; END; $$
DROP TRIGGER IF EXISTS trig_staging_iucn_cat ON staging_iucn_cat
CREATE TRIGGER trig_staging_iucn_cat BEFORE INSERT ON staging_iucn_cat FOR EACH ROW EXECUTE procedure staging_iucn_cat_id();

INSERT INTO staging_iucn_cat(DESCRIPTION, ORIGINATOR_ID ) VALUES('Ia', 10000 );
INSERT INTO staging_iucn_cat(DESCRIPTION, ORIGINATOR_ID ) VALUES('Ib', 10000 );
INSERT INTO staging_iucn_cat(DESCRIPTION, ORIGINATOR_ID ) VALUES('II', 10000 );
INSERT INTO staging_iucn_cat(DESCRIPTION, ORIGINATOR_ID ) VALUES('III', 10000 );
INSERT INTO staging_iucn_cat(DESCRIPTION, ORIGINATOR_ID ) VALUES('IV', 10000 );
INSERT INTO staging_iucn_cat(DESCRIPTION, ORIGINATOR_ID ) VALUES('V', 10000 );
INSERT INTO staging_iucn_cat(DESCRIPTION, ORIGINATOR_ID ) VALUES('VI', 10000 );
INSERT INTO staging_iucn_cat(DESCRIPTION, ORIGINATOR_ID ) VALUES('Not Reported', 10000 );
INSERT INTO staging_iucn_cat(DESCRIPTION, ORIGINATOR_ID ) VALUES('Not Applicable', 10000 );
INSERT INTO staging_iucn_cat(DESCRIPTION, ORIGINATOR_ID ) VALUES('Not Assigned', 10000 );


