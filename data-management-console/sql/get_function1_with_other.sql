DROP FUNCTION IF EXISTS %GET_FUNCTION%;
CREATE OR REPLACE FUNCTION %GET_FUNCTION%(in_id %ARG_TYPE0%, update_time TIMESTAMP, as_of_time TIMESTAMP) RETURNS TEXT LANGUAGE PLPGSQL AS $$ declare ret_string varchar(10000); begin SELECT array_to_string(array_agg(b.%VALUE_COLUMN% ORDER by b.id DESC), ';') || c.%RESIDUAL_FIELD% into ret_string from %ASSOC_TABLE_NAME% a, %REFERENCE_TABLE_NAME% b, %RESIDUAL_TABLE% c where a.id = b.id and a.%SOURCE_COLUMN_NAME0% = in_id AND a.%SOURCE_COLUMN_NAME0% = c.%SOURCE_COLUMN_NAME0% AND a.EffectiveFromZ <= update_time AND a.EffectiveToZ > as_of_time AND b.EffectiveFromZ <= update_time AND b.EffectiveToZ > as_of_time GROUP BY c.%RESIDUAL_FIELD%; return ret_string; end; $$