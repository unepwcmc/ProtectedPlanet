version: "3.8"

services:

  web:
    build: 
      context: .
      dockerfile: Dockerfile
    command: bash -l -c "bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - .:/var/www
    ports:
      - "3001:3000"
    env_file:
      - ".env"
    depends_on:
      - db
      - redis
      - elasticsearch
      # - webpacker
    networks:
      - webapp_network

  webpacker: 
    build: 
      context: .
      dockerfile: Dockerfile
    env_file: 
      - ".env"
    command: bash -l -c "rm -rf /var/www/app/public/packs; \
      rm -rf /var/www/tmp/cache/webpacker; \
      /var/www/bin/webpack-dev-server;"
    volumes: 
      - .:/var/www
    ports:
      - "3036:3035"
    networks:
      - webapp_network

  # node:
  #   image: node:10.21-alpine
  #   volumes:
  #     - .:/var/www
  #   command: bash -l -c ""

  db:
    container_name: protectedplanet-db
    image: kartoza/postgis
    ports:
      - "5433:5432"
    env_file:
      - ".env"
    volumes:
      - pg_data_volume:/var/lib/postgresql
    networks:
      - webapp_network

  redis:
    image: redis
    env_file:
      - ".env"
    volumes:
      - redis_data_volume:/data
    networks:
      - webapp_network

  sidekiq:
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/var/www
    command: bash -l -c "bundle exec sidekiq"
    env_file:
      - ".env"
    depends_on:
      - redis
      - db
    networks:
      - webapp_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.0
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9201:9200"
    env_file:
      - ".env"
    volumes:
      - "es_data_volume:/usr/share/elasticsearch/data"
    networks:
      - webapp_network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.0.0
    ports:
      - "5602:5601"
    networks:
      - webapp_network

networks:
  webapp_network:
    driver: bridge

volumes:
  pg_data_volume:
  redis_data_volume:
  import_data_volume:
  es_data_volume:
