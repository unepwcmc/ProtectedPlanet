DROP FUNCTION IF EXISTS %GET_FUNCTION%;
CREATE OR REPLACE FUNCTION %GET_FUNCTION%(in_id1 %ARG_TYPE0%, in_id2 %ARG_TYPE1%, update_time TIMESTAMP, as_of_time TIMESTAMP) RETURNS TEXT LANGUAGE PLPGSQL AS $$ declare ret_string varchar(10000); begin SELECT array_to_string(array_agg(distinct %VALUE_COLUMN%), ';') into ret_string from %ASSOC_TABLE_NAME% a, %REFERENCE_TABLE_NAME% b where a.id = b.id and a.%SOURCE_COLUMN_NAME0% = in_id1 AND a.%SOURCE_COLUMN_NAME1%=in_id2 AND a.EffectiveFromZ <= update_time AND a.EffectiveToZ > as_of_time AND b.EffectiveFromZ <= update_time AND b.EffectiveToZ > as_of_time; return ret_string; end; $$